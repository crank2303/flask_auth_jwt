openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger FlaskAUTH
  license:
    name: MIT
servers:
  - url: http://localhost:8088/v1
paths:
  /roles:
    get:
      summary: Список всех ролей
      operationId: listRoles
      tags:
        - roles
      parameters:
        - name: limit
          in: query
          description: Максимальное количество записей (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Список доступных ролей
          headers:
            x-next:
              description: Ссылка на следующую страницу запроса
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Roles"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Создание новой роли
      operationId: createRole
      tags:
        - roles
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /roles/{roleId}:
    get:
      summary: Информация по выбранной роли
      operationId: showRoleById
      tags:
        - roles
      parameters:
        - name: roleId
          in: path
          required: true
          description: ID роли, которую нежно получить
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Roles"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Roles:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
    Permissions:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
